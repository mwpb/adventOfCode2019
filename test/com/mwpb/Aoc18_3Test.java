package com.mwpb;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.*;

import static org.junit.jupiter.api.Assertions.*;

class Aoc18_3Test {

    String mazeString = "#################################################################################\n" +
            "#.#..a....#...#..........y..#.#.........#.I...#...#.....#.............#.......#.#\n" +
            "#.#.###.###.#.#P#########.#.#S#.#######.#.###.#.#.###.#.###.#########.#.#####.#.#\n" +
            "#.#...#.#...#...#.......#.#.#.#...#z....#...#.#.#.#...#...#.#...#.....#.#.......#\n" +
            "#.###.#.#.#######.#######.#.#.###.#.#####.#.#.#.#.#.#####.#.#.#.#.#####.#######.#\n" +
            "#q..#.#...#.#.....#.....#.#.#.....#.....#.#.#.#.#.#.....#..c#.#.#.......#.....#.#\n" +
            "#.###.#####.#.#.#.#.###.#.#.###########.#.#.#.#.#.#####.#####.#.#########.###.#.#\n" +
            "#.#...#.....#.#.#.#...#...#......b......#.#.#...#...#...#...#.#.....#.....#.#.#.#\n" +
            "#.#.###.#####.#.#####.#####.#######.#####.#.#######.#.#.#.#.#.#####.#.#####.#.###\n" +
            "#.#...#.......#.....#.#.....#.....#.#l..#.#...#.D.....#.#.#...#...#...#.....#...#\n" +
            "#.###.###.#######.#.#.#######.###.###.#.#.###.###.#####.#.#######.#####.###.###.#\n" +
            "#...#...#...#...#.#.#.......#...#.....#.#...#...#.#...#n#.#.......#....r..#.#...#\n" +
            "#.#.###.###.#.#.###.#######.###.#######.#######.#.#.#.#.#.#.#####.#.#######.#.###\n" +
            "#.#...#...#.#.#...........#...#.#.#...#.#.......#.#.#.#.#...#...#.#.....#...#...#\n" +
            "###.#####.###.###########.#.###.#.#.#.#.#.###.#####.#.#.#####.###.#######.#.###A#\n" +
            "#...#.....#...#...........#.#...#.#v#...#.#...#.....#.#...#...............#.#...#\n" +
            "#.###.#####.###.#####.#####.#.###.#.#####.#####.#####.#####.#################.###\n" +
            "#.....#.....#...#.G.#.#...#.......#.#...#...#.....#...#.....#.........#.....#.#.#\n" +
            "#.#####.#####.###.#.###.#.#######.#.###.#.#.#.#####.#.#.#####.#######.#.###.#.#.#\n" +
            "#.R...#.#.....#...#.#x..#...F.#.#.#...#.#.#...#...#.#.#.#...#.#.#...#.#...#...#.#\n" +
            "#####.#.#######.###.#.#######.#.#.###.#.#.#####.#.#.#.#.#.#.#.#.#.#.#.###.#####.#\n" +
            "#.#...#.........#...#.#.....#.#...#...#.#.#...#.#...#.#...#.#.#...#.#.....#...#.#\n" +
            "#.#.#########.###.#.###.###.#.#####.###.#.#.#.#.###.#######.#######.#######.#.#.#\n" +
            "#...#.......#.#...#.....#.#.#.......#...#.#.#.#...#.#.....#.......#.#.....T.#...#\n" +
            "#.#####.###.#.#.#########.#.#########.###.#.#.###.#.#.###.#######.#.#.#.#######.#\n" +
            "#...M.#.#...#.#.....#.....#...#.........#.#.#.....#.#.#.#.....#.#.#...#.#.....#.#\n" +
            "#####.#.###.#.#####.###.#.###.#####.###.#.#.#########.#.###.#.#.#.#.###.#.###.#.#\n" +
            "#...#.#...#.#.....#...#.#...#.....#...#.#.#.......#...#.#...#...#.#.#...#...#.#.#\n" +
            "#.###.###.#.#########.#.#########.#####.#.#######.#.###.#.#######.#.#.#####.#.#.#\n" +
            "#...#.....#...........#.....#...#.......#.....#.#...#...#...#.....#.#.......#.#.#\n" +
            "#K#.###################.###.#.#.#######.#####.#.#######.###.#.#####.#########.#.#\n" +
            "#.#...........#.....#...#.#.#.#.......#.#.#...#...#.......#...#.............#.#.#\n" +
            "#.#.###.#######.#.###.###.#.#.#####.###.#.#.###.###.#.###.#####.#############.###\n" +
            "#.#.#...#.......#.....#...#...#...#...#.#...#.......#...#.....#.....#.......#...#\n" +
            "#.#.#.###.#############.#.#####.#.###.#.#.#########.###.#######.#####.#####.###.#\n" +
            "#.#.#...#.....#...H.....#.......#...#...#.#.......#...#.....#...#.....#...#...#.#\n" +
            "#.#.###.#####.#######.#########.###.#####.#.#####.###.#####.#.###.#####.#.###.#.#\n" +
            "#.#.#...#.....#.....#.......#...#...#...#...#.....#.......#.....#.....#.#...#.#.#\n" +
            "#.#.#####.#####.###.#########.###.#####.#####.#######################.#.#.###.#.#\n" +
            "#.#..........u..#.............#o......................................#.#....k..#\n" +
            "#######################################.0.#######################################\n" +
            "#.#.......#.............#.......#...................#.....#....h......#.......#.#\n" +
            "#.#.#####.#.#######.#####.#####.#.#.###.#.###.#####.###O#.###.#######.#.#####.#.#\n" +
            "#.#.....#...#.....#.#.....#.....#.#.#.#.#...#.#.........#.....#...#...#...#.#...#\n" +
            "#.#####.#####.###.#.#.#####.#####.#.#.#.###.#.#################.#.#.###.#.#.###.#\n" +
            "#.E...#.#.#..w#...#.#.#.#.Z.#...#.#.#...#...#.#...#.......#.#.U.#...#...#.#...#.#\n" +
            "#.###.#.#.#.###.###.#.#.#.###.#.#.#.#####.###.#.#.#.#####.#.#.###########.#.#.#.#\n" +
            "#.#...#.#...#...#...#.#.#...#.#.#.#.....#...#...#...#...#.#.#.....#.....#.#.#.#.#\n" +
            "#.#.###.#.###.#.#.###.#.###.#.#.#####.#.###.#########.#.#.#.#####.#.###.#.#.#.#.#\n" +
            "#.#...#.#...#.#.#...#.#...#s..#.....#.#.#.#.#.........#.#.#.#...#...#.#...#.#.#.#\n" +
            "#####.#.###.#.#####.#.#.#.#########.#.#.#.#.#.#####.#####.#.#.#.#####.#####.#.#.#\n" +
            "#.....#.#...#.....#...#.#.......#...#.#.#.#.#.#.....#.....#...#.......#.....#...#\n" +
            "#.#####.#########.#####.#######.#.#####.#.#.###.###.#.#####.###.#######.#########\n" +
            "#.#.....#...#...#.....#.#...#...#.#.....#.#.#...#...#.#.#...#.#.....#...#...#..m#\n" +
            "#.#.#####.#.#.#.#.###.#.#.#.#####.#.###.#.#.#.###.###.#.#.###.#####.#.###.#.###.#\n" +
            "#.#.#.....#.#.#...#.#.#...#...#...#...#.#.#...#.....#.#...#.......#...#..e#...#.#\n" +
            "#.#.#####.#.#.#####.#.###.###.#.###.#.###.###.#######.#.#######.#.#####.#####.#.#\n" +
            "#.#...#...#...#.....#...#.#...#.L.#.#...#.#...#...#...#.....#...#...#...#...#...#\n" +
            "#.###.#.#######.###.###.###.#.###.#.###.#.#.###.#.#.#######.#.#####J#.###.#.###.#\n" +
            "#...#...#...#...#.#.......#.#.#...#...#.#.....#.#...#.#.......#.......#...#.#...#\n" +
            "#.#.#######.#.###.#######.#.###.###.###.#.#####.#####.#.###############.#.###.###\n" +
            "#.#.#.......#.#.....#...#...#...#...#...#...#...#.......#...#.#.....#.#.#.....#.#\n" +
            "#.###.#.#####.#.###.###.#####.###.###.#.#####.###.#########.#.#.###.#.#.#######.#\n" +
            "#...#.#.......#...#...#.#...#.#...#.#.#.#.....#.#...#.....#.#...#.#.#.#.....#...#\n" +
            "#.#.#.###########.#.#.#X#.#.#.###.#.#.###.#####.###.#.#.#.#.#####.#.#.#####.###Q#\n" +
            "#j#.#...#.........#.#.#...#.#.V.#...#...#.#.......#.#.#.#...#.....#.#.....#.#...#\n" +
            "###.###.#.#########.#######.#.#.#######.#.###.#.###.#.#.###.#.#.###.#.#.###.#.#.#\n" +
            "#...#...#...#.....#d....#...#.#.#.......#...#.#.#...#.#...#...#.#...#.#.....#.#.#\n" +
            "#.#.#.#####.###.#.###.#.#.#####.#.#####.###.###.#.#######.#####.#.###W#######.#.#\n" +
            "#.#.#.#.......#.#...#.#.#.#..f..#...#.#.#...#...#...#...#...#...#.#.#.....#...#.#\n" +
            "#.#.#.#######.#.#.#.#.###.###.###.#.#.#.#.###.#####.#.#.###.#.###.#.#####.#.###.#\n" +
            "#.#.#.....C.#.#.#.#.#...#.....#...#.#.#.#.#...........#...#.#.#...#.....#...#.#.#\n" +
            "#.#########.#.###.#.###.#######.###.#.#.#.#####.#########.#.###.###.#.#######.#.#\n" +
            "#...#.....#.#.....#...#.....#.....#.#...#.....#.#.......#...#...#...#.........#.#\n" +
            "#.#.#.###.#.###########.###.#######.###.#.###.###.#####.#####.###.#########.#.#.#\n" +
            "#.#.....#.#.......#...#...#t#.....#...#.#...#.....#...#.....#...#.Y.#.#.....#.#.#\n" +
            "#.#######.#######.#.#.###.#.#.###.###.#.###.#######.#######.###.###.#.#.#######.#\n" +
            "#..g#.#...#.......#.#.#...#...#...#...#.#.#.#.....#.......#...#.#.#.#.#....p..#.#\n" +
            "###.#.#N###.#######.#.#.#######.###.###.#.#.#.###.#######.###.#.#.#.#.#######.#.#\n" +
            "#.....#.............#...#........i..#...#.....#.............#...#.........B.#...#\n" +
            "#################################################################################";

    @Test
    void testExamples() {
    	
    	Aoc18_3 aoc18test = new Aoc18_3(
    			"########################\n" + 
    			"#0..............ac.GI.b#\n" + 
    			"###d#e#f################\n" + 
    			"###A#B#C################\n" + 
    			"###g#h#i################\n" + 
    			"########################");
        int minSteps = aoc18test.mainDistance(new BFSState(
        		new Point(1, 1),
        		new HashSet<Character>(),
        		aoc18test.keysLeft.size()
        		));
        Assertions.assertEquals(81, minSteps);
        
        Aoc18_3 aoc18test3 = new Aoc18_3( // this example seems to take too long...
        		"#################\n" +
                "#i.G..c...e..H.p#\n" +
                "########.########\n" +
                "#j.A..b...f..D.o#\n" +
                "########0########\n" +
                "#k.E..a...g..B.n#\n" +
                "########.########\n" +
                "#l.F..d...h..C.m#\n" +
                "#################");
        int minSteps3 = aoc18test3.mainDistance(new BFSState(
        		new Point(8, 4),
        		new HashSet<Character>(),
        		aoc18test3.keysLeft.size()
        		));
        Assertions.assertEquals(136, minSteps3);
        
        
//        aoc18test3.getAdjList();
//        int minSteps3 = aoc18test3.mainDistance(new StepsState(new PointState('0', new HashSet<Character>()), aoc18test3.keysLeft.size()));
//        Assertions.assertEquals(minSteps3, 136);
//        
//        Aoc18 aoc18test2 = new Aoc18("########################\n" + 
//        		"#...............b.C.D.f#\n" + 
//        		"#.######################\n" + 
//        		"#.....0.a.B.c.d.A.e.F.g#\n" + 
//        		"########################");
//        aoc18test2.getAdjList();
//        aoc18test2.nextKeys(new PointState('e', new HashSet(Set.of('0', 'a', 'b', 'c', 'd', 'e'))));
//        
//        int minSteps2 = aoc18test2.mainDistance(new StepsState(new PointState('0', new HashSet<Character>()), aoc18test2.keysLeft.size()));
//        Assertions.assertEquals(minSteps2, 132);
    }
    
    @Test
    void testMain() {
    	Aoc18 aoc18 = new Aoc18(this.mazeString);
        aoc18.getAdjList();
        int minSteps = aoc18.mainDistance(new StepsState(new PointState('0', new HashSet<Character>()), aoc18.keysLeft.size()));
        System.out.println(minSteps);
    }
}